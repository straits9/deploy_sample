name: Deploy Flutter Web App to GitHub Pages

on:
  push:
    branches:
      - web-deploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # 브랜치에 따라 사용할 Github Environment 설정
    # environment: ${{ github.ref == 'refs/heads/web-preview-deploy' && 'preview' || 'prod' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.3"

      - name: Install Dependencies
        run: flutter pub get

      # - name: Create .env file from Environment Secrets
      #   run: |
      #     echo "ENVIRONMENT=${{ github.ref == 'refs/heads/web-preview-deploy' && 'preview' || 'prod' }}" > .env
      #     echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
      #     echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> .env
      #     echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env
      #     echo "GOOGLE_SIGN_IN_WEB_CLIENT_ID=${{ secrets.GOOGLE_SIGN_IN_WEB_CLIENT_ID }}" >> .env
      #     echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
      #     echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
      #     echo "GOOGLE_CSE_ID=${{ secrets.GOOGLE_CSE_ID }}" >> .env
      #     echo "GOOGLE_CALLBACK=${{ vars.GOOGLE_CALLBACK }}" >> .env
      #     cat .env
      #   shell: bash

      - name: Run Build Runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build Web
        run: |
          REPOSITORY="${{ github.repository }}"
          REPO_NAME=$(echo $REPOSITORY | cut -d '/' -f 2)
          flutter build web --release --base-href "/$REPO_NAME/"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.ACTION_SECRET_KEY }} # repository에서 사용할 시크릿 키 이름
          publish_dir: build/web
          publish_branch: gh-pages
